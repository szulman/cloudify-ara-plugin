package com.uc4.importexportservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated
 * source version: 2.1
 * 
 */
@WebService(name = "ImportExportServiceSoap", targetNamespace = "http://uc4.com/")
@XmlSeeAlso({ ObjectFactory.class })
public interface ImportExportServiceSoap {

	/**
	 * 
	 * @param conditions
	 * @param startDate
	 * @param username
	 * @param count
	 * @param customType
	 * @param endDate
	 * @param properties
	 * @param format
	 * @param mainType
	 * @param password
	 * @param begin
	 * @return returns com.uc4.importexportservice.Result
	 */
	@WebMethod(operationName = "Export", action = "http://uc4.com/Export")
	@WebResult(name = "ExportResult", targetNamespace = "http://uc4.com/")
	@RequestWrapper(localName = "Export", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.Export")
	@ResponseWrapper(localName = "ExportResponse", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.ExportResponse")
	public Result export(
			@WebParam(name = "username", targetNamespace = "http://uc4.com/") String username,
			@WebParam(name = "password", targetNamespace = "http://uc4.com/") String password,
			@WebParam(name = "mainType", targetNamespace = "http://uc4.com/") String mainType,
			@WebParam(name = "customType", targetNamespace = "http://uc4.com/") String customType,
			@WebParam(name = "begin", targetNamespace = "http://uc4.com/") int begin,
			@WebParam(name = "count", targetNamespace = "http://uc4.com/") int count,
			@WebParam(name = "format", targetNamespace = "http://uc4.com/") String format,
			@WebParam(name = "properties", targetNamespace = "http://uc4.com/") ArrayOfString properties,
			@WebParam(name = "startDate", targetNamespace = "http://uc4.com/") String startDate,
			@WebParam(name = "endDate", targetNamespace = "http://uc4.com/") String endDate,
			@WebParam(name = "conditions", targetNamespace = "http://uc4.com/") ArrayOfString conditions);

	/**
	 * 
	 * @param username
	 * @param fomat
	 * @param data
	 * @param failOnError
	 * @param mainType
	 * @param password
	 * @return returns com.uc4.importexportservice.Result
	 */
	@WebMethod(operationName = "Import", action = "http://uc4.com/Import")
	@WebResult(name = "ImportResult", targetNamespace = "http://uc4.com/")
	@RequestWrapper(localName = "Import", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.ImportFunc")
	@ResponseWrapper(localName = "ImportResponse", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.ImportResponse")
	public Result importFunc(
			@WebParam(name = "username", targetNamespace = "http://uc4.com/") String username,
			@WebParam(name = "password", targetNamespace = "http://uc4.com/") String password,
			@WebParam(name = "mainType", targetNamespace = "http://uc4.com/") String mainType,
			@WebParam(name = "fomat", targetNamespace = "http://uc4.com/") String fomat,
			@WebParam(name = "failOnError", targetNamespace = "http://uc4.com/") boolean failOnError,
			@WebParam(name = "data", targetNamespace = "http://uc4.com/") String data);

	/**
	 * 
	 * @param username
	 * @param fomat
	 * @param data
	 * @param failOnError
	 * @param mainType
	 * @param password
	 * @return returns com.uc4.importexportservice.Result
	 */
	@WebMethod(operationName = "Delete", action = "http://uc4.com/Delete")
	@WebResult(name = "DeleteResult", targetNamespace = "http://uc4.com/")
	@RequestWrapper(localName = "Delete", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.Delete")
	@ResponseWrapper(localName = "DeleteResponse", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.DeleteResponse")
	public Result delete(
			@WebParam(name = "username", targetNamespace = "http://uc4.com/") String username,
			@WebParam(name = "password", targetNamespace = "http://uc4.com/") String password,
			@WebParam(name = "mainType", targetNamespace = "http://uc4.com/") String mainType,
			@WebParam(name = "fomat", targetNamespace = "http://uc4.com/") String fomat,
			@WebParam(name = "failOnError", targetNamespace = "http://uc4.com/") boolean failOnError,
			@WebParam(name = "data", targetNamespace = "http://uc4.com/") String data);

	/**
	 * 
	 * @param token
	 * @return returns com.uc4.importexportservice.Result
	 */
	@WebMethod(operationName = "GetStatus", action = "http://uc4.com/GetStatus")
	@WebResult(name = "GetStatusResult", targetNamespace = "http://uc4.com/")
	@RequestWrapper(localName = "GetStatus", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.GetStatus")
	@ResponseWrapper(localName = "GetStatusResponse", targetNamespace = "http://uc4.com/", className = "com.uc4.importexportservice.GetStatusResponse")
	public Result getStatus(
			@WebParam(name = "token", targetNamespace = "http://uc4.com/") String token);

	/**
	 * 
	 * @param parameters
	 * @return returns com.uc4.importexportservice.TestResponse
	 */
	@WebMethod(operationName = "TestCsv", action = "http://uc4.com/Test")
	@WebResult(name = "TestResponse", targetNamespace = "http://uc4.com/", partName = "parameters")
	@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
	public TestResponse testCsv(
			@WebParam(name = "Test", targetNamespace = "http://uc4.com/", partName = "parameters") Test parameters);

}
